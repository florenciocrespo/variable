 <% 
 var julioA=757797,julioI=517257;
 var ca=0,insa=0,nda=0,nds=0,fcr=0,av=0;
 var caI=0,insaI=0,ndaI=0,ndsI=0,fcrI=0,avI=0;

 //ATENTO
 if(Number(calidad) > variables[0]._0 && Number(calidad) < variables[0]._30)
   {
   		ca=(30/(variables[0]._30-variables[0]._0))*calidad;
   		ca-=(30/(variables[0]._30-variables[0]._0)*variables[0]._0);
   		console.log("calidad "+calidad
 		+" "+variables[0]._0
 		+" "+variables[0]._30
 		+" "+(30/(variables[0]._30-variables[0]._0))*calidad
 		+" "+(30/(variables[0]._30-variables[0]._0)*variables[0]._0)
 		+" "+ca);

   }else if(Number(calidad) >= variables[0]._30 && Number(calidad) < variables[0]._60){
   		ca=(20/(variables[0]._60-variables[0]._30))*calidad;
   		ca-=(20/(variables[0]._60-variables[0]._30)*variables[0]._30)-30;
   		console.log("calidad "+calidad
 		+" "+variables[0]._30
 		+" "+variables[0]._60
 		+" "+(20/(variables[0]._60-variables[0]._30))*calidad
 		+" "+(20/(variables[0]._60-variables[0]._30)*variables[0]._30)-30
 		+" "+ca);

   }else if(Number(calidad) >= variables[0]._60 && Number(calidad) < variables[0]._80){
   		ca=(10/(variables[0]._80-variables[0]._60))*calidad;
   		ca-=(10/(variables[0]._80-variables[0]._60)*variables[0]._60)-60;
   		console.log("calidad "+calidad
 		+" "+variables[0]._60
 		+" "+variables[0]._80
 		+" "+(10/(variables[0]._80-variables[0]._60))*calidad
 		+" "+(10/(variables[0]._80-variables[0]._60)*variables[0]._60)-60
 		+" "+ca);

   }else if(Number(calidad) >= variables[0]._80 && Number(calidad) < variables[0]._100){
   		ca=(20/(variables[0]._100-variables[0]._80))*calidad;
   		ca-=(20/(variables[0]._100-variables[0]._80)*variables[0]._80)-80;
   		console.log("ca "+ ca);

   }else if(Number(calidad) >= variables[0]._100 && Number(calidad) < variables[0]._120){
   		ca=(20/(variables[0]._120-variables[0]._100))*calidad;
   		ca-=(20/(variables[0]._120-variables[0]._100)*variables[0]._100)-100;
   		console.log("calidad "+calidad
 		+" "+variables[0]._100
 		+" "+variables[0]._120
 		+" "+(20/(variables[0]._120-variables[0]._100))*calidad
 		+" "+(20/(variables[0]._120-variables[0]._100)*variables[0]._100)-100
 		+" "+ca);

   }else if(Number(calidad) >= variables[0]._120 && Number(calidad) < variables[0]._150){
   		ca=(20/(variables[0]._150-variables[0]._120))*calidad;
   		ca-=(20/(variables[0]._150-variables[0]._120)*variables[0]._120)-120;
   		console.log("calidad "+calidad
 		+" "+variables[0]._120
 		+" "+variables[0]._150
 		+" "+(20/(variables[0]._150-variables[0]._120))*calidad
 		+" "+(20/(variables[0]._150-variables[0]._120)*variables[0]._120)-120
 		+" "+ca);

   }else if(Number(calidad) >= variables[0]._150){
   		ca=150;
   		console.log("calidad "+calidad
 		+" "+variables[0]._120
 		+" "+variables[0]._150
 		+" "+(20/(variables[0]._150-variables[0]._120))*calidad
 		+" "+(20/(variables[0]._150-variables[0]._120)*variables[0]._120)-120
 		+" "+ca);

   }else {ca=0;}
 
  ///insa
 
if(Number(insatisfechos) < variables[1]._0 && Number(insatisfechos) > variables[1]._30)
   {
   		insa=(30/(variables[1]._30-variables[1]._0))*insatisfechos;
   		insa-=(30/(variables[1]._30-variables[1]._0)*variables[1]._0);
   		console.log("insatisfechos "+insatisfechos
 		+" "+variables[1]._0
 		+" "+variables[1]._30
 		+" "+(30/(variables[1]._30-variables[1]._0))*insatisfechos
 		+" "+(30/(variables[1]._30-variables[1]._0)*variables[1]._0)
 		+" "+insa);

   }else if(Number(insatisfechos) <= variables[1]._30 && Number(insatisfechos) > variables[1]._60){
   		insa=(20/(variables[1]._60-variables[1]._30))*insatisfechos;
   		insa-=(20/(variables[1]._60-variables[1]._30)*variables[1]._30)-30;
   		

   }else if(Number(insatisfechos) <= variables[1]._60 && Number(insatisfechos) > variables[1]._80){
   		insa=(10/(variables[1]._80-variables[1]._60))*insatisfechos;
   		insa-=(10/(variables[1]._80-variables[1]._60)*variables[1]._60)-60;
   		
 		

   }else if(Number(insatisfechos) <= variables[1]._80 && Number(insatisfechos) > variables[1]._100){
   		insa=(20/(variables[1]._100-variables[1]._80))*insatisfechos;
   		insa-=(20/(variables[1]._100-variables[1]._80)*variables[1]._80)-80;
   		

   }else if(Number(insatisfechos) <= variables[1]._100 && Number(insatisfechos) > variables[1]._120){
   		insa=(20/(variables[1]._120-variables[1]._100))*insatisfechos;
   		insa-=(20/(variables[1]._120-variables[1]._100)*variables[1]._100)-100;
   		

   }else if(Number(insatisfechos) <= variables[1]._120 && Number(insatisfechos) > variables[1]._150){
   		insa=(20/(variables[1]._150-variables[1]._120))*insatisfechos;
   		insa-=(20/(variables[1]._150-variables[1]._120)*variables[1]._120)-120;
   		

   }else if(Number(insatisfechos) <= variables[1]._150){
   		insa=150;
   		
   }else {insa=0;}
 ///nda
 if(Number(NDA) > variables[2]._0 && Number(NDA) < variables[2]._30)
   {
   		nda=(30/(variables[2]._30-variables[2]._0))*NDA;
   		nda-=(30/(variables[2]._30-variables[2]._0)*variables[2]._0);
   		

   }else if(Number(NDA) >= variables[2]._30 && Number(NDA) < variables[2]._60){
   		nda=(20/(variables[2]._60-variables[2]._30))*NDA;
   		nda-=(20/(variables[2]._60-variables[2]._30)*variables[2]._30)-30;
   		
   }else if(Number(NDA) >= variables[2]._60 && Number(NDA) < variables[2]._80){
   		nda=(10/(variables[2]._80-variables[2]._60))*NDA;
   		nda-=(10/(variables[2]._80-variables[2]._60)*variables[2]._60)-60;
   		

   }else if(Number(NDA) >= variables[2]._80 && Number(NDA) < variables[2]._100){
   		nda=(20/(variables[2]._100-variables[2]._80))*NDA;
   		nda-=(20/(variables[2]._100-variables[2]._80)*variables[2]._80)-80;
   		

   }else if(Number(NDA) >= variables[2]._100 && Number(NDA) < variables[2]._120){
   		nda=(20/(variables[2]._120-variables[2]._100))*NDA;
   		nda-=(20/(variables[2]._120-variables[2]._100)*variables[2]._100)-100;
   		

   }else if(Number(NDA) >= variables[2]._120 && Number(NDA) < variables[2]._150){
   		nda=(20/(variables[2]._150-variables[2]._120))*NDA;
   		nda-=(20/(variables[2]._150-variables[2]._120)*variables[2]._120)-120;
   		

   }else if(Number(NDA) >= variables[2]._150){
   		nda=150;
   		

   }else {nda=0;}
    
  ///nds
 if(Number(NDS) > variables[3]._0 && Number(NDS) < variables[3]._30)
   {
   		nds=(30/(variables[3]._30-variables[3]._0))*NDS;
   		nds-=(30/(variables[3]._30-variables[3]._0)*variables[3]._0);
   		

   }else if(Number(NDS) >= variables[3]._30 && Number(NDS) < variables[3]._60){
   		nds=(20/(variables[3]._60-variables[3]._30))*NDS;
   		nds-=(20/(variables[3]._60-variables[3]._30)*variables[3]._30)-30;
   		
   }else if(Number(NDS) >= variables[3]._60 && Number(NDS) < variables[3]._80){
   		nds=(10/(variables[3]._80-variables[3]._60))*NDS;
   		nds-=(10/(variables[3]._80-variables[3]._60)*variables[3]._60)-60;
   		

   }else if(Number(NDS) >= variables[3]._80 && Number(NDS) < variables[3]._100){
   		nds=(20/(variables[3]._100-variables[3]._80))*NDS;
   		nds-=(20/(variables[3]._100-variables[3]._80)*variables[3]._80)-80;
   		

   }else if(Number(NDS) >= variables[3]._100 && Number(NDS) < variables[3]._120){
   		nds=(20/(variables[3]._120-variables[3]._100))*NDS;
   		nds-=(20/(variables[3]._120-variables[3]._100)*variables[3]._100)-100;
   		

   }else if(Number(NDS) >= variables[3]._120 && Number(NDS) < variables[3]._150){
   		nds=(20/(variables[3]._150-variables[3]._120))*NDS;
   		nds-=(20/(variables[3]._150-variables[3]._120)*variables[3]._120)-120;
   		

   }else if(Number(NDS) >= variables[3]._150){
   		nds=150;
   		

   }else {nds=0;}
    
///fcr
 if(Number(FCR) > variables[4]._0 && Number(FCR) < variables[4]._30)
   {
   		fcr=(30/(variables[4]._30-variables[4]._0))*FCR;
   		fcr-=(30/(variables[4]._30-variables[4]._0)*variables[4]._0);
   		

   }else if(Number(FCR) >= variables[4]._30 && Number(FCR) < variables[4]._60){
   		fcr=(20/(variables[4]._60-variables[4]._30))*FCR;
   		fcr-=(20/(variables[4]._60-variables[4]._30)*variables[4]._30)-30;
   		
   }else if(Number(FCR) >= variables[4]._60 && Number(FCR) < variables[4]._80){
   		fcr=(10/(variables[4]._80-variables[4]._60))*FCR;
   		fcr-=(10/(variables[4]._80-variables[4]._60)*variables[4]._60)-60;
   		

   }else if(Number(FCR) >= variables[4]._80 && Number(FCR) < variables[4]._100){
   		fcr=(20/(variables[4]._100-variables[4]._80))*FCR;
   		fcr-=(20/(variables[4]._100-variables[4]._80)*variables[4]._80)-80;
   		

   }else if(Number(FCR) >= variables[4]._100 && Number(FCR) < variables[4]._120){
   		fcr=(20/(variables[4]._120-variables[4]._100))*FCR;
   		fcr-=(20/(variables[4]._120-variables[4]._100)*variables[4]._100)-100;
   		

   }else if(Number(FCR) >= variables[4]._120 && Number(FCR) < variables[4]._150){
   		fcr=(20/(variables[4]._150-variables[4]._120))*FCR;
   		fcr-=(20/(variables[4]._150-variables[4]._120)*variables[4]._120)-120;
   		

   }else if(Number(FCR) >= variables[4]._150){
   		fcr=150;
   		

   }else {fcr=0;}
  
///av
 
if(Number(AV) < variables[5]._0 && Number(AV) > variables[5]._30)
   {
   		av=(30/(variables[5]._30-variables[5]._0))*AV;
   		av-=(30/(variables[5]._30-variables[5]._0)*variables[5]._0);
   		

   }else if(Number(AV) <= variables[5]._30 && Number(AV) > variables[5]._60){
   		av=(20/(variables[5]._60-variables[5]._30))*AV;
   		av-=(20/(variables[5]._60-variables[5]._30)*variables[5]._30)-30;
   		

   }else if(Number(AV) <= variables[5]._60 && Number(AV) > variables[5]._80){
   		av=(10/(variables[5]._80-variables[5]._60))*AV;
   		av-=(10/(variables[5]._80-variables[5]._60)*variables[5]._60)-60;
   		
 		

   }else if(Number(AV) <= variables[5]._80 && Number(AV) > variables[5]._100){
   		av=(20/(variables[5]._100-variables[5]._80))*AV;
   		av-=(20/(variables[5]._100-variables[5]._80)*variables[5]._80)-80;
   		

   }else if(Number(AV) <= variables[5]._100 && Number(AV) > variables[5]._120){
   		av=(20/(variables[5]._120-variables[5]._100))*AV;
   		av-=(20/(variables[5]._120-variables[5]._100)*variables[5]._100)-100;
   		

   }else if(Number(AV) <= variables[5]._120 && Number(AV) > variables[5]._150){
   		av=(20/(variables[5]._150-variables[5]._120))*AV;
   		av-=(20/(variables[5]._150-variables[5]._120)*variables[5]._120)-120;
   		

   }else if(Number(AV) <= variables[5]._150){
   		av=150;
   		
   }else {av=0;}

var sa=((ca*variables[0].peso)+(insa*variables[1].peso))/100;
var cacc=((nda*variables[2].peso)+(nds*variables[3].peso))/100;
var cages=((fcr*variables[4].peso)+(av*variables[5].peso))/100;
var suma=sa+cacc+cages;
var rv=0;
if (suma >= 150){
	rv=suma/10;
}else if (suma > 80 && suma <= 100){
	rv=(3*suma/20)-5;
}else if (suma > 60 && suma <= 80){
	rv=(7*suma/20)-21;
}else if (suma > 49 && suma <= 60){
	rv=0;
}else if (suma > 30 && suma <= 49){
	rv=(0.5*suma)-25;
}else if (suma <= 30){
	rv=-10;
}

var rvMes=0;
rvMes=(rv*julioA)/100;

//INELCOM

 if(Number(calidadI) > variables[0]._0 && Number(calidadI) < variables[0]._30)
   {
         caI=(30/(variables[0]._30-variables[0]._0))*calidadI;
         caI-=(30/(variables[0]._30-variables[0]._0)*variables[0]._0);
         

   }else if(Number(calidadI) >= variables[0]._30 && Number(calidadI) < variables[0]._60){
         caI=(20/(variables[0]._60-variables[0]._30))*calidadI;
         caI-=(20/(variables[0]._60-variables[0]._30)*variables[0]._30)-30;
         

   }else if(Number(calidadI) >= variables[0]._60 && Number(calidadI) < variables[0]._80){
         caI=(10/(variables[0]._80-variables[0]._60))*calidadI;
         caI-=(10/(variables[0]._80-variables[0]._60)*variables[0]._60)-60;
        

   }else if(Number(calidadI) >= variables[0]._80 && Number(calidadI) < variables[0]._100){
         caI=(20/(variables[0]._100-variables[0]._80))*calidadI;
         caI-=(20/(variables[0]._100-variables[0]._80)*variables[0]._80)-80;
         
   }else if(Number(calidadI) >= variables[0]._100 && Number(calidadI) < variables[0]._120){
         caI=(20/(variables[0]._120-variables[0]._100))*calidadI;
         caI-=(20/(variables[0]._120-variables[0]._100)*variables[0]._100)-100;
         

   }else if(Number(calidadI) >= variables[0]._120 && Number(calidadI) < variables[0]._150){
         caI=(20/(variables[0]._150-variables[0]._120))*calidadI;
         caI-=(20/(variables[0]._150-variables[0]._120)*variables[0]._120)-120;
         

   }else if(Number(calidadI) >= variables[0]._150){
         caI=150;
         

   }else {caI=0;}

 ///insa
 
if(Number(insatisfechosI) < variables[1]._0 && Number(insatisfechosI) > variables[1]._30)
   {
         insaI=(30/(variables[1]._30-variables[1]._0))*insatisfechosI;
         insaI-=(30/(variables[1]._30-variables[1]._0)*variables[1]._0);
         

   }else if(Number(insatisfechosI) <= variables[1]._30 && Number(insatisfechosI) > variables[1]._60){
         insaI=(20/(variables[1]._60-variables[1]._30))*insatisfechosI;
         insaI-=(20/(variables[1]._60-variables[1]._30)*variables[1]._30)-30;
         

   }else if(Number(insatisfechosI) <= variables[1]._60 && Number(insatisfechosI) > variables[1]._80){
         insaI=(10/(variables[1]._80-variables[1]._60))*insatisfechosI;
         insaI-=(10/(variables[1]._80-variables[1]._60)*variables[1]._60)-60;
         
      

   }else if(Number(insatisfechosI) <= variables[1]._80 && Number(insatisfechosI) > variables[1]._100){
         insaI=(20/(variables[1]._100-variables[1]._80))*insatisfechosI;
         insaI-=(20/(variables[1]._100-variables[1]._80)*variables[1]._80)-80;
         

   }else if(Number(insatisfechosI) <= variables[1]._100 && Number(insatisfechosI) > variables[1]._120){
         insaI=(20/(variables[1]._120-variables[1]._100))*insatisfechosI;
         insaI-=(20/(variables[1]._120-variables[1]._100)*variables[1]._100)-100;
         

   }else if(Number(insatisfechosI) <= variables[1]._120 && Number(insatisfechosI) > variables[1]._150){
         insaI=(20/(variables[1]._150-variables[1]._120))*insatisfechosI;
         insaI-=(20/(variables[1]._150-variables[1]._120)*variables[1]._120)-120;
         

   }else if(Number(insatisfechosI) <= variables[1]._150){
         insaI=150;
         
   }else {insaI=0;}
 ///nda
 if(Number(NDAI) > variables[2]._0 && Number(NDAI) < variables[2]._30)
   {
         ndaI=(30/(variables[2]._30-variables[2]._0))*NDAI;
         ndaI-=(30/(variables[2]._30-variables[2]._0)*variables[2]._0);
         

   }else if(Number(NDAI) >= variables[2]._30 && Number(NDAI) < variables[2]._60){
         ndaI=(20/(variables[2]._60-variables[2]._30))*NDAI;
         ndaI-=(20/(variables[2]._60-variables[2]._30)*variables[2]._30)-30;
         
   }else if(Number(NDAI) >= variables[2]._60 && Number(NDAI) < variables[2]._80){
         ndaI=(10/(variables[2]._80-variables[2]._60))*NDAI;
         ndaI-=(10/(variables[2]._80-variables[2]._60)*variables[2]._60)-60;
         

   }else if(Number(NDAI) >= variables[2]._80 && Number(NDAI) < variables[2]._100){
         ndaI=(20/(variables[2]._100-variables[2]._80))*NDAI;
         ndaI-=(20/(variables[2]._100-variables[2]._80)*variables[2]._80)-80;
         

   }else if(Number(NDAI) >= variables[2]._100 && Number(NDAI) < variables[2]._120){
         ndaI=(20/(variables[2]._120-variables[2]._100))*NDAI;
         ndaI-=(20/(variables[2]._120-variables[2]._100)*variables[2]._100)-100;
         

   }else if(Number(NDAI) >= variables[2]._120 && Number(NDAI) < variables[2]._150){
         ndaI=(20/(variables[2]._150-variables[2]._120))*NDAI;
         ndaI-=(20/(variables[2]._150-variables[2]._120)*variables[2]._120)-120;
         

   }else if(Number(NDAI) >= variables[2]._150){
         ndaI=150;
         

   }else {ndaI=0;}
    
  ///nds
 if(Number(NDSI) > variables[3]._0 && Number(NDSI) < variables[3]._30)
   {
         ndsI=(30/(variables[3]._30-variables[3]._0))*NDSI;
         ndsI-=(30/(variables[3]._30-variables[3]._0)*variables[3]._0);
         

   }else if(Number(NDSI) >= variables[3]._30 && Number(NDSI) < variables[3]._60){
         ndsI=(20/(variables[3]._60-variables[3]._30))*NDSI;
         ndsI-=(20/(variables[3]._60-variables[3]._30)*variables[3]._30)-30;
         
   }else if(Number(NDSI) >= variables[3]._60 && Number(NDSI) < variables[3]._80){
         ndsI=(10/(variables[3]._80-variables[3]._60))*NDSI;
         ndsI-=(10/(variables[3]._80-variables[3]._60)*variables[3]._60)-60;
         

   }else if(Number(NDSI) >= variables[3]._80 && Number(NDSI) < variables[3]._100){
         ndsI=(20/(variables[3]._100-variables[3]._80))*NDSI;
         ndsI-=(20/(variables[3]._100-variables[3]._80)*variables[3]._80)-80;
         

   }else if(Number(NDSI) >= variables[3]._100 && Number(NDSI) < variables[3]._120){
         ndsI=(20/(variables[3]._120-variables[3]._100))*NDSI;
         ndsI-=(20/(variables[3]._120-variables[3]._100)*variables[3]._100)-100;
         

   }else if(Number(NDSI) >= variables[3]._120 && Number(NDSI) < variables[3]._150){
         ndsI=(20/(variables[3]._150-variables[3]._120))*NDSI;
         ndsI-=(20/(variables[3]._150-variables[3]._120)*variables[3]._120)-120;
         

   }else if(Number(NDSI) >= variables[3]._150){
         ndsI=150;
         

   }else {ndsI=0;}
    
///fcr
 if(Number(FCRI) > variables[4]._0 && Number(FCRI) < variables[4]._30)
   {
         fcrI=(30/(variables[4]._30-variables[4]._0))*FCRI;
         fcrI-=(30/(variables[4]._30-variables[4]._0)*variables[4]._0);
         

   }else if(Number(FCRI) >= variables[4]._30 && Number(FCRI) < variables[4]._60){
         fcrI=(20/(variables[4]._60-variables[4]._30))*FCRI;
         fcrI-=(20/(variables[4]._60-variables[4]._30)*variables[4]._30)-30;
         
   }else if(Number(FCRI) >= variables[4]._60 && Number(FCRI) < variables[4]._80){
         fcrI=(10/(variables[4]._80-variables[4]._60))*FCRI;
         fcrI-=(10/(variables[4]._80-variables[4]._60)*variables[4]._60)-60;
         

   }else if(Number(FCRI) >= variables[4]._80 && Number(FCRI) < variables[4]._100){
         fcrI=(20/(variables[4]._100-variables[4]._80))*FCRI;
         fcrI-=(20/(variables[4]._100-variables[4]._80)*variables[4]._80)-80;
         

   }else if(Number(FCRI) >= variables[4]._100 && Number(FCRI) < variables[4]._120){
         fcrI=(20/(variables[4]._120-variables[4]._100))*FCRI;
         fcrI-=(20/(variables[4]._120-variables[4]._100)*variables[4]._100)-100;
         

   }else if(Number(FCRI) >= variables[4]._120 && Number(FCRI) < variables[4]._150){
         fcrI=(20/(variables[4]._150-variables[4]._120))*FCRI;
         fcrI-=(20/(variables[4]._150-variables[4]._120)*variables[4]._120)-120;
         

   }else if(Number(FCRI) >= variables[4]._150){
         fcrI=150;
         

   }else {fcrI=0;}
  
///av
 
if(Number(AVI) < variables[5]._0 && Number(AVI) > variables[5]._30)
   {
         avI=(30/(variables[5]._30-variables[5]._0))*AVI;
         avI-=(30/(variables[5]._30-variables[5]._0)*variables[5]._0);
         

   }else if(Number(AVI) <= variables[5]._30 && Number(AVI) > variables[5]._60){
         avI=(20/(variables[5]._60-variables[5]._30))*AVI;
         avI-=(20/(variables[5]._60-variables[5]._30)*variables[5]._30)-30;
         

   }else if(Number(AVI) <= variables[5]._60 && Number(AVI) > variables[5]._80){
         avI=(10/(variables[5]._80-variables[5]._60))*AVI;
         avI-=(10/(variables[5]._80-variables[5]._60)*variables[5]._60)-60;
         
      

   }else if(Number(AVI) <= variables[5]._80 && Number(AVI) > variables[5]._100){
         avI=(20/(variables[5]._100-variables[5]._80))*AVI;
         avI-=(20/(variables[5]._100-variables[5]._80)*variables[5]._80)-80;
         

   }else if(Number(AVI) <= variables[5]._100 && Number(AVI) > variables[5]._120){
         avI=(20/(variables[5]._120-variables[5]._100))*AVI;
         avI-=(20/(variables[5]._120-variables[5]._100)*variables[5]._100)-100;
         

   }else if(Number(AVI) <= variables[5]._120 && Number(AVI) > variables[5]._150){
         avI=(20/(variables[5]._150-variables[5]._120))*AVI;
         avI-=(20/(variables[5]._150-variables[5]._120)*variables[5]._120)-120;
         

   }else if(Number(AVI) <= variables[5]._150){
         avI=150;
         
   }else {avI=0;}



var saI=((caI*variables[0].peso)+(insaI*variables[1].peso))/100;
var caccI=((ndaI*variables[2].peso)+(ndsI*variables[3].peso))/100;
var cagesI=((fcrI*variables[4].peso)+(avI*variables[5].peso))/100;
var sumaI=saI+caccI+cagesI;
var rvI=0;
if (sumaI >= 150){
   rvI=sumaI/10;
}else if (sumaI > 80 && sumaI <= 100){
   rvI=(3*sumaI/20)-5;
}else if (sumaI > 60 && sumaI <= 80){
   rvI=(7*sumaI/20)-21;
}else if (sumaI > 49 && sumaI <= 60){
   rvI=0;
}else if (sumaI > 30 && sumaI <= 49){
   rvI=(0.5*sumaI)-25;
}else if (sumaI <= 30){
   rvI=-10;
}

var rvMesI=0;
rvMesI=(rvI*julioI)/100;

 %>

<div class="container">
 <table class="responsive-table">
    <caption>Top 3 Resultado Variable ATENTO - INELCOM</caption>
    <thead>
      <tr>
        <th colspan=1>Indicador</th>
        <th colspan=2>Julio</th>
        <th colspan=2">Agosto</th>
        <th colspan=2">Septiembre</th>
         </tr>
    </thead>
    <tfoot>
      <tr>
        <td colspan="7">Datos simulados</td>
      </tr>
    </tfoot>
    <tbody>
    <tr>
    <td> Indicador calidad</td>
    <td> <%=  ca.toFixed(2)%></td><td> <%=  caI.toFixed(2)%></td></tr>
    <td>Indicador insatisfechos</td>
    <td> <%= insa.toFixed(2)%></td><td> <%= insaI.toFixed(2)%></td></tr>
    <td>Indicador NDA </td>
    <td> <%= nda.toFixed(2)%></td><td> <%= ndaI.toFixed(2)%></td></tr>
    <td>Indicador NDS </td>
    <td> <%= nds.toFixed(2)%></td><td> <%= ndsI.toFixed(2)%></td></tr>
    <td>Indicador FCR </td>
    <td> <%= fcr.toFixed(2)%></td><td> <%= fcrI.toFixed(2)%></td></tr>
    <td>Indicador AV/Boletintes </td>
    <td> <%= av.toFixed(2)%></td><td> <%= avI.toFixed(2)%></td></tr>
    <td>SATISFACCION CLIENTE </td>
    <td> <%= sa.toFixed(2)%></td><td> <%= saI.toFixed(2)%></td></tr>
    <td>CALIDAD ACCESO </td>
    <td> <%= cacc.toFixed(2)%></td><td> <%= caccI.toFixed(2)%></td></tr>
    <td>CALIDAD GESTION </td>
    <td> <%= cages.toFixed(2)%></td><td> <%= cagesI.toFixed(2)%></td></tr>
    <td>Resultado Porc. Variable </td>
    <td> <%= suma.toFixed(2) %></td><td> <%= sumaI.toFixed(2) %></td></tr>
    <td>% Retribución  Variable </td>
    <td> <%= rv.toFixed(2) %></td><td> <%= rvI.toFixed(2) %></td></tr>
    <td>Retribución  Variable  MES </td>
    <td> <%= rvMes.toFixed(2) %></td><td> <%= rvMesI.toFixed(2) %></td></tr>


</tbody>    
 </table>
</div>


<p>
	<a href="/variables">Volver</a>
</p>