 <% 
 var junioA=757797,abrilA=814610,mayoA=735253,junioI=517257,junioNtA=174049;
 var ca=0,insa=0,nda=0,nds=0,fcr=0,av=0;
 var caNt=0,insaNt=0,ndaNt=0,ndsNt=0,fcrNt=0,avNt=0;
 var caI=0,insaI=0,ndaI=0,ndsI=0,fcrI=0,avI=0;
 var caM=0,insaM=0,ndaM=0,ndsM=0,fcrM=0,avM=0;
 var caJN=0,insaJN=0,ndaJN=0,ndsJN=0,fcrJN=0,avJN=0;
 var sa=0,sav=0,insav=0;
 var saM=0,savM=0,insavM=0;
 var saJN=0,savJN=0,insavJN=0;
 var saNt=0,savNt=0,insavNt=0;
 var cacc=0,ndav=0,ndsv=0;
 var caccM=0,ndavM=0,ndsvM=0;
 var caccJN=0,ndavJN=0,ndsvJN=0;
 var caccNt=0,ndavNt=0,ndsvNt=0;
 var cages=0,fcrv=0,avv=0;
 var cagesM=0,fcrvM=0,avvM=0;
 var cagesJN=0,fcrvJN=0,avvJN=0;
 var cagesNt=0,fcrvNt=0,avvNt=0;
 var saI=0,caIv=0,insaIv=0;
 var saM=0,caMv=0,insaMv=0;
 var saJN=0,caJNv=0,insaJNv=0;
 var caccI=0,ndaIv=0,ndsIv=0;
 var cagesI=0,fcrIv=0,avIv=0;


var i; for (i=0; i < variables.length; i++) {
   switch(variables[i].id) {
      case 1:
       //ATENTO
 if(Number(calidad) > variables[i]._0 && Number(calidad) < variables[i]._30)
   {
         ca=(30/(variables[i]._30-variables[i]._0))*calidad;
         ca-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         sav=variables[i].peso;
         
   }else if(Number(calidad) >= variables[i]._30 && Number(calidad) < variables[i]._50){
         ca=(20/(variables[i]._50-variables[i]._30))*calidad;
         ca-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         sav=variables[i].peso;
         
   }
   else if(Number(calidad) >= variables[i]._50 && Number(calidad) < variables[i]._60){
         ca=(10/(variables[i]._60-variables[i]._50))*calidad;
         ca-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         sav=variables[i].peso;
         
   }else if(Number(calidad) >= variables[i]._60 && Number(calidad) < variables[i]._80){
         ca=(20/(variables[i]._80-variables[i]._60))*calidad;
         ca-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         sav=variables[i].peso;
         
   }else if(Number(calidad) >= variables[i]._80 && Number(calidad) < variables[i]._100){
         ca=(20/(variables[i]._100-variables[i]._80))*calidad;
         ca-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         sav=variables[i].peso;
         
   }else if(Number(calidad) >= variables[i]._100 && Number(calidad) < variables[i]._120){
         ca=(20/(variables[i]._120-variables[i]._100))*calidad;
         ca-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         sav=variables[i].peso;
         
   }else if(Number(calidad) >= variables[i]._120 && Number(calidad) < variables[i]._150){
         ca=(30/(variables[i]._150-variables[i]._120))*calidad;
         ca-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         sav=variables[i].peso;
        
   }else if(Number(calidad) >= variables[i]._150){
         ca=150;
         sav=variables[i].peso;
         
   }else {ca=0;}

if(Number(calidadM) > variables[i]._0 && Number(calidadM) < variables[i]._30)
   {
         caM=(30/(variables[i]._30-variables[i]._0))*calidadM;
         caM-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         savM=variables[i].peso;

   }else if(Number(calidadM) >= variables[i]._30 && Number(calidadM) < variables[i]._50){
         caM=(20/(variables[i]._50-variables[i]._30))*calidadM;
         caM-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         savM=variables[i].peso;

   }
   else if(Number(calidadM) >= variables[i]._50 && Number(calidadM) < variables[i]._60){
         caM=(10/(variables[i]._60-variables[i]._50))*calidadM;
         caM-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         savM=variables[i].peso;

   }else if(Number(calidadM) >= variables[i]._60 && Number(calidadM) < variables[i]._80){
         caM=(20/(variables[i]._80-variables[i]._60))*calidadM;
         caM-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
        savM=variables[i].peso;

   }else if(Number(calidadM) >= variables[i]._80 && Number(calidadM) < variables[i]._100){
         caM=(20/(variables[i]._100-variables[i]._80))*calidadM;
         caM-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         savM=variables[i].peso;
   }else if(Number(calidadM) >= variables[i]._100 && Number(calidadM) < variables[i]._120){
         caM=(20/(variables[i]._120-variables[i]._100))*calidadM;
         caM-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         savM=variables[i].peso;

   }else if(Number(calidadM) >= variables[i]._120 && Number(calidadM) < variables[i]._150){
         caM=(30/(variables[i]._150-variables[i]._120))*calidadM;
         caM-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         savM=variables[i].peso;

   }else if(Number(calidadM) >= variables[0]._150){
         caM=150;savM=variables[i].peso;
         

   }else {caM=0;}

   if(Number(calidadJN) > variables[i]._0 && Number(calidadJN) < variables[i]._30)
   {
         caJN=(30/(variables[i]._30-variables[i]._0))*calidadJN;
         caJN-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         savJN=variables[i].peso;

   }else if(Number(calidadJN) >= variables[i]._30 && Number(calidadJN) < variables[i]._50){
         caJN=(20/(variables[i]._50-variables[i]._30))*calidadJN;
         caJN-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         savJN=variables[i].peso;

   }
   else if(Number(calidadJN) >= variables[i]._50 && Number(calidadJN) < variables[i]._60){
         caJN=(10/(variables[i]._60-variables[i]._50))*calidadJN;
         caJN-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         savJN=variables[i].peso;

   }else if(Number(calidadJN) >= variables[i]._60 && Number(calidadJN) < variables[i]._80){
         caJN=(20/(variables[i]._80-variables[i]._60))*calidadJN;
         caJN-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
        savJN=variables[i].peso;

   }else if(Number(calidadJN) >= variables[i]._80 && Number(calidadJN) < variables[i]._100){
         caJN=(20/(variables[i]._100-variables[i]._80))*calidadJN;
         caJN-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         savJN=variables[i].peso;
   }else if(Number(calidadJN) >= variables[i]._100 && Number(calidadJN) < variables[i]._120){
         caJN=(20/(variables[i]._120-variables[i]._100))*calidadJN;
         caJN-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         savJN=variables[i].peso;

   }else if(Number(calidadJN) >= variables[i]._120 && Number(calidadJN) < variables[i]._150){
         caJN=(30/(variables[i]._150-variables[i]._120))*calidadJN;
         caJN-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         savJN=variables[i].peso;

   }else if(Number(calidadJN) >= variables[0]._150){
         caJN=150;savJN=variables[i].peso;
         

   }else {caJN=0;}






   if(Number(calidadI) > variables[i]._0 && Number(calidadI) < variables[i]._30)
   {
         caI=(30/(variables[i]._30-variables[i]._0))*calidadI;
         caI-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         caIv=variables[i].peso;

   }else if(Number(calidadI) >= variables[i]._30 && Number(calidadI) < variables[i]._50){
         caI=(20/(variables[i]._50-variables[i]._30))*calidadI;
         caI-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         caIv=variables[i].peso;

   }
   else if(Number(calidadI) >= variables[i]._50 && Number(calidadI) < variables[i]._60){
         caI=(10/(variables[i]._60-variables[i]._50))*calidadI;
         caI-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         caIv=variables[i].peso;

   }else if(Number(calidadI) >= variables[i]._60 && Number(calidadI) < variables[i]._80){
         caI=(20/(variables[i]._80-variables[i]._60))*calidadI;
         caI-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
        caIv=variables[i].peso;

   }else if(Number(calidadI) >= variables[i]._80 && Number(calidadI) < variables[i]._100){
         caI=(20/(variables[i]._100-variables[i]._80))*calidadI;
         caI-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         caIv=variables[i].peso;
   }else if(Number(calidadI) >= variables[i]._100 && Number(calidadI) < variables[i]._120){
         caI=(20/(variables[i]._120-variables[i]._100))*calidadI;
         caI-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         caIv=variables[i].peso;

   }else if(Number(calidadI) >= variables[i]._120 && Number(calidadI) < variables[i]._150){
         caI=(30/(variables[i]._150-variables[i]._120))*calidadI;
         caI-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         caIv=variables[i].peso;

   }else if(Number(calidadI) >= variables[0]._150){
         caI=150;caIv=variables[i].peso;
         

   }else {caI=0;}
 
      break;
      case 2:
      if(Number(insatisfechos) < variables[1]._0 && Number(insatisfechos) > variables[1]._30)
   {
         insa=(30/(variables[i]._30-variables[i]._0))*insatisfechos;
         insa-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         insav=variables[i].peso;

   }else if(Number(insatisfechos) <= variables[i]._30 && Number(insatisfechos) > variables[i]._50){
         insa=(20/(variables[i]._50-variables[i]._30))*insatisfechos;
         insa-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         insav=variables[i].peso;

   }
   else if(Number(insatisfechos) <= variables[i]._50 && Number(insatisfechos) > variables[i]._60){
         insa=(10/(variables[i]._60-variables[i]._50))*insatisfechos;
         insa-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         insav=variables[i].peso;

   }else if(Number(insatisfechos) <= variables[i]._60 && Number(insatisfechos) > variables[i]._80){
         insa=(20/(variables[i]._80-variables[i]._60))*insatisfechos;
         insa-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         insav=variables[i].peso;
      

   }else if(Number(insatisfechos) <= variables[i]._80 && Number(insatisfechos) > variables[i]._100){
         insa=(20/(variables[i]._100-variables[i]._80))*insatisfechos;
         insa-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         insav=variables[i].peso;

   }else if(Number(insatisfechos) <= variables[i]._100 && Number(insatisfechos) > variables[i]._120){
         insa=(20/(variables[i]._120-variables[i]._100))*insatisfechos;
         insa-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         insav=variables[i].peso;

   }else if(Number(insatisfechos) <= variables[i]._120 && Number(insatisfechos) > variables[i]._150){
         insa=(30/(variables[i]._150-variables[i]._120))*insatisfechos;
         insa-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         insav=variables[i].peso;

   }else if(Number(insatisfechos) <= variables[i]._150){
         insa=150;insav=variables[i].peso;
         
   }else {insa=0;}

if(Number(insatisfechosM) < variables[1]._0 && Number(insatisfechosM) > variables[1]._30)
   {
         insaM=(30/(variables[i]._30-variables[i]._0))*insatisfechosM;
         insaM-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         insavM=variables[i].peso;

   }else if(Number(insatisfechosM) <= variables[i]._30 && Number(insatisfechosM) > variables[i]._50){
         insaM=(20/(variables[i]._50-variables[i]._30))*insatisfechosM;
         insaM-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         insavM=variables[i].peso;

   }
   else if(Number(insatisfechosM) <= variables[i]._50 && Number(insatisfechosM) > variables[i]._60){
         insaM=(10/(variables[i]._60-variables[i]._50))*insatisfechosM;
         insaM-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         insavM=variables[i].peso;

   }else if(Number(insatisfechosM) <= variables[i]._60 && Number(insatisfechosM) > variables[i]._80){
         insaM=(20/(variables[i]._80-variables[i]._60))*insatisfechosM;
         insaM-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         insavM=variables[i].peso;
      

   }else if(Number(insatisfechosM) <= variables[i]._80 && Number(insatisfechosM) > variables[i]._100){
         insaM=(20/(variables[i]._100-variables[i]._80))*insatisfechosM;
         insaM-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         insavM=variables[i].peso;

   }else if(Number(insatisfechosM) <= variables[i]._100 && Number(insatisfechosM) > variables[i]._120){
         insaM=(20/(variables[i]._120-variables[i]._100))*insatisfechosM;
         insaM-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         insavM=variables[i].peso;

   }else if(Number(insatisfechosM) <= variables[i]._120 && Number(insatisfechosM) > variables[i]._150){
         insaM=(30/(variables[i]._150-variables[i]._120))*insatisfechosM;
         insaM-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         insavM=variables[i].peso;

   }else if(Number(insatisfechosM) <= variables[i]._150){
         insaM=150;insavM=variables[i].peso;
         
   }else {insaM=0;}

   if(Number(insatisfechosJN) < variables[1]._0 && Number(insatisfechosJN) > variables[1]._30)
   {
         insaJN=(30/(variables[i]._30-variables[i]._0))*insatisfechosJN;
         insaJN-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         insavJN=variables[i].peso;

   }else if(Number(insatisfechosJN) <= variables[i]._30 && Number(insatisfechosJN) > variables[i]._50){
         insaJN=(20/(variables[i]._50-variables[i]._30))*insatisfechosJN;
         insaJN-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         insavJN=variables[i].peso;

   }
   else if(Number(insatisfechosJN) <= variables[i]._50 && Number(insatisfechosJN) > variables[i]._60){
         insaJN=(10/(variables[i]._60-variables[i]._50))*insatisfechosJN;
         insaJN-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         insavJN=variables[i].peso;

   }else if(Number(insatisfechosJN) <= variables[i]._60 && Number(insatisfechosJN) > variables[i]._80){
         insaJN=(20/(variables[i]._80-variables[i]._60))*insatisfechosJN;
         insaJN-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         insavJN=variables[i].peso;
      

   }else if(Number(insatisfechosJN) <= variables[i]._80 && Number(insatisfechosJN) > variables[i]._100){
         insaJN=(20/(variables[i]._100-variables[i]._80))*insatisfechosJN;
         insaJN-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         insavJN=variables[i].peso;

   }else if(Number(insatisfechosJN) <= variables[i]._100 && Number(insatisfechosJN) > variables[i]._120){
         insaJN=(20/(variables[i]._120-variables[i]._100))*insatisfechosJN;
         insaJN-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         insavJN=variables[i].peso;

   }else if(Number(insatisfechosJN) <= variables[i]._120 && Number(insatisfechosJN) > variables[i]._150){
         insaJN=(30/(variables[i]._150-variables[i]._120))*insatisfechosJN;
         insaJN-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         insavJN=variables[i].peso;

   }else if(Number(insatisfechosJN) <= variables[i]._150){
         insaJN=150;insavJN=variables[i].peso;
         
   }else {insaJN=0;}








   if(Number(insatisfechosI) < variables[i]._0 && Number(insatisfechosI) > variables[i]._30)
   {
         insaI=(30/(variables[i]._30-variables[i]._0))*insatisfechosI;
         insaI-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         insaIv=variables[i].peso;

   }else if(Number(insatisfechosI) <= variables[i]._30 && Number(insatisfechosI) > variables[i]._50){
         insaI=(20/(variables[i]._50-variables[i]._30))*insatisfechosI;
         insaI-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         insaIv=variables[i].peso;

   }
   else if(Number(insatisfechosI) <= variables[i]._50 && Number(insatisfechosI) > variables[i]._60){
         insaI=(10/(variables[i]._60-variables[i]._50))*insatisfechosI;
         insaI-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         insaIv=variables[i].peso;

   }else if(Number(insatisfechosI) <= variables[i]._60 && Number(insatisfechosI) > variables[i]._80){
         insaI=(20/(variables[i]._80-variables[i]._60))*insatisfechosI;
         insaI-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         insaIv=variables[i].peso;
      

   }else if(Number(insatisfechosI) <= variables[i]._80 && Number(insatisfechosI) > variables[i]._100){
         insaI=(20/(variables[i]._100-variables[i]._80))*insatisfechosI;
         insaI-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         insaIv=variables[i].peso;

   }else if(Number(insatisfechosI) <= variables[i]._100 && Number(insatisfechosI) > variables[i]._120){
         insaI=(20/(variables[i]._120-variables[i]._100))*insatisfechosI;
         insaI-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         insaIv=variables[i].peso;

   }else if(Number(insatisfechosI) <= variables[i]._120 && Number(insatisfechosI) > variables[i]._150){
         insaI=(30/(variables[i]._150-variables[i]._120))*insatisfechosI;
         insaI-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         insaIv=variables[i].peso;

   }else if(Number(insatisfechosI) <= variables[i]._150){
         insaI=150;insaIv=variables[i].peso;
         
   }else {insaI=0;}
      break;
      case 3:
      ///nda
      if(Number(NDA) > variables[i]._0 && Number(NDA) < variables[i]._30)
   {
         nda=(30/(variables[i]._30-variables[i]._0))*NDA;
         nda-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndav=variables[i].peso;

   }else if(Number(NDA) >= variables[i]._30 && Number(NDA) < variables[i]._50){
         nda=(20/(variables[i]._50-variables[i]._30))*NDA;
         nda-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndav=variables[i].peso;
         console.log("ndav "+ndav);
   }
   else if(Number(NDA) >= variables[i]._50 && Number(NDA) < variables[i]._60){
         nda=(10/(variables[i]._60-variables[i]._50))*NDA;
         nda-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndav=variables[i].peso;
   }else if(Number(NDA) >= variables[i]._60 && Number(NDA) < variables[i]._80){
         nda=(20/(variables[i]._80-variables[i]._60))*NDA;
         nda-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndav=variables[i].peso;

   }else if(Number(NDA) >= variables[i]._80 && Number(NDA) < variables[i]._100){
         nda=(20/(variables[i]._100-variables[i]._80))*NDA;
         nda-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndav=variables[i].peso;

   }else if(Number(NDA) >= variables[i]._100 && Number(NDA) < variables[i]._120){
         nda=(20/(variables[i]._120-variables[i]._100))*NDA;
         nda-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndav=variables[i].peso;

   }else if(Number(NDA) >= variables[i]._120 && Number(NDA) < variables[i]._150){
         nda=(30/(variables[i]._150-variables[i]._120))*NDA;
         nda-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndav=variables[i].peso;

   }else if(Number(NDA) >= variables[i]._150){
         nda=150;ndav=variables[i].peso;
         

   }else {nda=0;}


if(Number(NDAM) > variables[i]._0 && Number(NDAM) < variables[i]._30)
   {
         ndaM=(30/(variables[i]._30-variables[i]._0))*NDAM;
         ndaM-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndavM=variables[i].peso;

   }else if(Number(NDAM) >= variables[i]._30 && Number(NDAM) < variables[i]._50){
         ndaM=(20/(variables[i]._50-variables[i]._30))*NDAM;
         ndaM-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndavM=variables[i].peso;
         console.log("ndavM "+ndavM);
   }
   else if(Number(NDAM) >= variables[i]._50 && Number(NDAM) < variables[i]._60){
         ndaM=(10/(variables[i]._60-variables[i]._50))*NDAM;
         ndaM-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndavM=variables[i].peso;
   }else if(Number(NDAM) >= variables[i]._60 && Number(NDAM) < variables[i]._80){
         ndaM=(20/(variables[i]._80-variables[i]._60))*NDAM;
         ndaM-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndavM=variables[i].peso;

   }else if(Number(NDAM) >= variables[i]._80 && Number(NDAM) < variables[i]._100){
         ndaM=(20/(variables[i]._100-variables[i]._80))*NDAM;
         ndaM-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndavM=variables[i].peso;

   }else if(Number(NDAM) >= variables[i]._100 && Number(NDAM) < variables[i]._120){
         ndaM=(20/(variables[i]._120-variables[i]._100))*NDAM;
         ndaM-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndavM=variables[i].peso;

   }else if(Number(NDAM) >= variables[i]._120 && Number(NDAM) < variables[i]._150){
         ndaM=(30/(variables[i]._150-variables[i]._120))*NDAM;
         ndaM-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndavM=variables[i].peso;

   }else if(Number(NDAM) >= variables[i]._150){
         ndaM=150;ndavM=variables[i].peso;
         

   }else {ndaM=0;}

   if(Number(NDAJN) > variables[i]._0 && Number(NDAJN) < variables[i]._30)
   {
         ndaJN=(30/(variables[i]._30-variables[i]._0))*NDAJN;
         ndaJN-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndavJN=variables[i].peso;

   }else if(Number(NDAJN) >= variables[i]._30 && Number(NDAJN) < variables[i]._50){
         ndaJN=(20/(variables[i]._50-variables[i]._30))*NDAJN;
         ndaJN-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndavJN=variables[i].peso;
   }
   else if(Number(NDAJN) >= variables[i]._50 && Number(NDAJN) < variables[i]._60){
         ndaJN=(10/(variables[i]._60-variables[i]._50))*NDAJN;
         ndaJN-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndavJN=variables[i].peso;
   }else if(Number(NDAJN) >= variables[i]._60 && Number(NDAJN) < variables[i]._80){
         ndaJN=(20/(variables[i]._80-variables[i]._60))*NDAJN;
         ndaJN-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndavJN=variables[i].peso;

   }else if(Number(NDAJN) >= variables[i]._80 && Number(NDAJN) < variables[i]._100){
         ndaJN=(20/(variables[i]._100-variables[i]._80))*NDAJN;
         ndaJN-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndavJN=variables[i].peso;

   }else if(Number(NDAJN) >= variables[i]._100 && Number(NDAJN) < variables[i]._120){
         ndaJN=(20/(variables[i]._120-variables[i]._100))*NDAJN;
         ndaJN-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndavJN=variables[i].peso;

   }else if(Number(NDAJN) >= variables[i]._120 && Number(NDAJN) < variables[i]._150){
         ndaJN=(30/(variables[i]._150-variables[i]._120))*NDAJN;
         ndaJN-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndavJN=variables[i].peso;

   }else if(Number(NDAJN) >= variables[i]._150){
         ndaJN=150;ndavJN=variables[i].peso;
         

   }else {ndaJN=0;}







   ///nda
 if(Number(NDAI) > variables[i]._0 && Number(NDAI) < variables[i]._30)
   {
         ndaI=(30/(variables[i]._30-variables[i]._0))*NDAI;
         ndaI-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndaIv=variables[i].peso;

   }else if(Number(NDAI) >= variables[i]._30 && Number(NDAI) < variables[i]._50){
         ndaI=(20/(variables[i]._50-variables[i]._30))*NDAI;
         ndaI-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndaIv=variables[i].peso;
   }
   else if(Number(NDAI) >= variables[i]._50 && Number(NDAI) < variables[i]._60){
         ndaI=(10/(variables[i]._60-variables[i]._50))*NDAI;
         ndaI-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndaIv=variables[i].peso;
   }else if(Number(NDAI) >= variables[i]._60 && Number(NDAI) < variables[i]._80){
         ndaI=(20/(variables[i]._80-variables[i]._60))*NDAI;
         ndaI-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndaIv=variables[i].peso;

   }else if(Number(NDAI) >= variables[i]._80 && Number(NDAI) < variables[i]._100){
         ndaI=(20/(variables[i]._100-variables[i]._80))*NDAI;
         ndaI-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndaIv=variables[i].peso;

   }else if(Number(NDAI) >= variables[i]._100 && Number(NDAI) < variables[i]._120){
         ndaI=(20/(variables[i]._120-variables[i]._100))*NDAI;
         ndaI-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndaIv=variables[i].peso;

   }else if(Number(NDAI) >= variables[i]._120 && Number(NDAI) < variables[i]._150){
         ndaI=(30/(variables[i]._150-variables[i]._120))*NDAI;
         ndaI-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndaIv=variables[i].peso;

   }else if(Number(NDAI) >= variables[i]._150){
         ndaI=150;ndaIv=variables[i].peso;
         

   }else {ndaI=0;}
    

      break;
      case 4:

  ///nds
 if(Number(NDS) > variables[i]._0 && Number(NDS) < variables[i]._30)
   {
         nds=(30/(variables[i]._30-variables[i]._0))*NDS;
         nds-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndsv=variables[i].peso;

   }else if(Number(NDS) >= variables[i]._30 && Number(NDS) < variables[i]._50){
         nds=(20/(variables[i]._50-variables[i]._30))*NDS;
         nds-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndsv=variables[i].peso;
   }
   else if(Number(NDS) >= variables[i]._50 && Number(NDS) < variables[i]._60){
         nds=(10/(variables[i]._60-variables[i]._50))*NDS;
         nds-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndsv=variables[i].peso;
   }else if(Number(NDS) >= variables[i]._60 && Number(NDS) < variables[i]._80){
         nds=(20/(variables[i]._80-variables[i]._60))*NDS;
         nds-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndsv=variables[i].peso;

   }else if(Number(NDS) >= variables[i]._80 && Number(NDS) < variables[i]._100){
         nds=(20/(variables[i]._100-variables[i]._80))*NDS;
         nds-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndsv=variables[i].peso;

   }else if(Number(NDS) >= variables[i]._100 && Number(NDS) < variables[i]._120){
         nds=(20/(variables[i]._120-variables[i]._100))*NDS;
         nds-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndsv=variables[i].peso;

   }else if(Number(NDS) >= variables[i]._120 && Number(NDS) < variables[i]._150){
         nds=(30/(variables[i]._150-variables[i]._120))*NDS;
         nds-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndsv=variables[i].peso;

   }else if(Number(NDS) >= variables[i]._150){
         nds=150;
         ndsv=variables[i].peso;

   }else {nds=0;}


if(Number(NDSM) > variables[i]._0 && Number(NDSM) < variables[i]._30)
   {
         ndsM=(30/(variables[i]._30-variables[i]._0))*NDSM;
         ndsM-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndsvM=variables[i].peso;

   }else if(Number(NDSM) >= variables[i]._30 && Number(NDSM) < variables[i]._50){
         ndsM=(20/(variables[i]._50-variables[i]._30))*NDSM;
         ndsM-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndsvM=variables[i].peso;
   }
   else if(Number(NDSM) >= variables[i]._50 && Number(NDSM) < variables[i]._60){
         ndsM=(10/(variables[i]._60-variables[i]._50))*NDSM;
         ndsM-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndsvM=variables[i].peso;
   }else if(Number(NDSM) >= variables[i]._60 && Number(NDSM) < variables[i]._80){
         ndsM=(20/(variables[i]._80-variables[i]._60))*NDSM;
         ndsM-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndsvM=variables[i].peso;

   }else if(Number(NDSM) >= variables[i]._80 && Number(NDSM) < variables[i]._100){
         ndsM=(20/(variables[i]._100-variables[i]._80))*NDSM;
         ndsM-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndsvM=variables[i].peso;

   }else if(Number(NDSM) >= variables[i]._100 && Number(NDSM) < variables[i]._120){
         ndsM=(20/(variables[i]._120-variables[i]._100))*NDSM;
         ndsM-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndsvM=variables[i].peso;

   }else if(Number(NDSM) >= variables[i]._120 && Number(NDSM) < variables[i]._150){
         ndsM=(30/(variables[i]._150-variables[i]._120))*NDSM;
         ndsM-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndsvM=variables[i].peso;

   }else if(Number(NDSM) >= variables[i]._150){
         ndsM=150;
         ndsvM=variables[i].peso;

   }else {ndsM=0;}

   if(Number(NDSJN) > variables[i]._0 && Number(NDSJN) < variables[i]._30)
   {
         ndsJN=(30/(variables[i]._30-variables[i]._0))*NDSJN;
         ndsJN-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndsvJN=variables[i].peso;

   }else if(Number(NDSJN) >= variables[i]._30 && Number(NDSJN) < variables[i]._50){
         ndsJN=(20/(variables[i]._50-variables[i]._30))*NDSJN;
         ndsJN-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndsvJN=variables[i].peso;
   }
   else if(Number(NDSJN) >= variables[i]._50 && Number(NDSJN) < variables[i]._60){
         ndsJN=(10/(variables[i]._60-variables[i]._50))*NDSJN;
         ndsJN-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndsvJN=variables[i].peso;
   }else if(Number(NDSJN) >= variables[i]._60 && Number(NDSJN) < variables[i]._80){
         ndsJN=(20/(variables[i]._80-variables[i]._60))*NDS;
         ndsJN-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndsvJN=variables[i].peso;

   }else if(Number(NDSJN) >= variables[i]._80 && Number(NDSJN) < variables[i]._100){
         ndsJN=(20/(variables[i]._100-variables[i]._80))*NDSJN;
         ndsJN-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndsvJN=variables[i].peso;

   }else if(Number(NDSJN) >= variables[i]._100 && Number(NDSJN) < variables[i]._120){
         ndsJN=(20/(variables[i]._120-variables[i]._100))*NDSJN;
         ndsJN-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndsvJN=variables[i].peso;

   }else if(Number(NDSJN) >= variables[i]._120 && Number(NDSJN) < variables[i]._150){
         ndsJN=(30/(variables[i]._150-variables[i]._120))*NDSJN;
         ndsJN-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndsvJN=variables[i].peso;

   }else if(Number(NDSJN) >= variables[i]._150){
         ndsJN=150;
         ndsvJN=variables[i].peso;

   }else {ndsJN=0;}









  ///nds
 if(Number(NDSI) > variables[i]._0 && Number(NDSI) < variables[i]._30)
   {
         ndsI=(30/(variables[i]._30-variables[i]._0))*NDSI;
         ndsI-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndsIv=variables[i].peso;

   }else if(Number(NDSI) >= variables[i]._30 && Number(NDSI) < variables[i]._50){
         ndsI=(20/(variables[i]._50-variables[i]._30))*NDSI;
         ndsI-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndsIv=variables[i].peso;
   }
   else if(Number(NDSI) >= variables[i]._50 && Number(NDSI) < variables[i]._60){
         ndsI=(10/(variables[i]._60-variables[i]._50))*NDSI;
         ndsI-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndsIv=variables[i].peso;
   }else if(Number(NDSI) >= variables[i]._60 && Number(NDSI) < variables[i]._80){
         ndsI=(20/(variables[i]._80-variables[i]._60))*NDSI;
         ndsI-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndsIv=variables[i].peso;

   }else if(Number(NDSI) >= variables[i]._80 && Number(NDSI) < variables[i]._100){
         ndsI=(20/(variables[i]._100-variables[i]._80))*NDSI;
         ndsI-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndsIv=variables[i].peso;

   }else if(Number(NDSI) >= variables[i]._100 && Number(NDSI) < variables[i]._120){
         ndsI=(20/(variables[i]._120-variables[i]._100))*NDSI;
         ndsI-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndsIv=variables[i].peso;

   }else if(Number(NDSI) >= variables[i]._120 && Number(NDSI) < variables[i]._150){
         ndsI=(30/(variables[i]._150-variables[i]._120))*NDSI;
         ndsI-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndsIv=variables[i].peso;

   }else if(Number(NDSI) >= variables[i]._150){
         ndsI=150;ndsIv=variables[i].peso;
         

   }else {ndsI=0;}

  
      break;
      case 5:

///fcr
 if(Number(FCR) > variables[i]._0 && Number(FCR) < variables[i]._30)
   {
         fcr=(30/(variables[i]._30-variables[i]._0))*FCR;
         fcr-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         fcrv=variables[i].peso;

   }else if(Number(FCR) >= variables[i]._30 && Number(FCR) < variables[i]._50){
         fcr=(20/(variables[i]._50-variables[i]._30))*FCR;
         fcr-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         fcrv=variables[i].peso;
   }
   else if(Number(FCR) >= variables[i]._50 && Number(FCR) < variables[i]._60){
         fcr=(10/(variables[i]._60-variables[i]._50))*FCR;
         fcr-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         fcrv=variables[i].peso;
   }else if(Number(FCR) >= variables[i]._60 && Number(FCR) < variables[i]._80){
         fcr=(20/(variables[i]._80-variables[i]._60))*FCR;
         fcr-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         fcrv=variables[i].peso;

   }else if(Number(FCR) >= variables[i]._80 && Number(FCR) < variables[i]._100){
         fcr=(20/(variables[i]._100-variables[i]._80))*FCR;
         fcr-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         fcrv=variables[i].peso;

   }else if(Number(FCR) >= variables[i]._100 && Number(FCR) < variables[i]._120){
         fcr=(20/(variables[i]._120-variables[i]._100))*FCR;
         fcr-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         fcrv=variables[i].peso;

   }else if(Number(FCR) >= variables[i]._120 && Number(FCR) < variables[i]._150){
         fcr=(30/(variables[i]._150-variables[i]._120))*FCR;
         fcr-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         fcrv=variables[i].peso;

   }else if(Number(FCR) >= variables[i]._150){
         fcr=150;fcrv=variables[i].peso;

   }else {fcr=0;}



if(Number(FCRM) > variables[i]._0 && Number(FCRM) < variables[i]._30)
   {
         fcrM=(30/(variables[i]._30-variables[i]._0))*FCRM;
         fcrM-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         fcrvM=variables[i].peso;

   }else if(Number(FCRM) >= variables[i]._30 && Number(FCRM) < variables[i]._50){
         fcrM=(20/(variables[i]._50-variables[i]._30))*FCRM;
         fcrM-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         fcrvM=variables[i].peso;
   }
   else if(Number(FCRM) >= variables[i]._50 && Number(FCRM) < variables[i]._60){
         fcrM=(10/(variables[i]._60-variables[i]._50))*FCRM;
         fcrM-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         fcrvM=variables[i].peso;
   }else if(Number(FCRM) >= variables[i]._60 && Number(FCRM) < variables[i]._80){
         fcrM=(20/(variables[i]._80-variables[i]._60))*FCRM;
         fcrM-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         fcrvM=variables[i].peso;

   }else if(Number(FCRM) >= variables[i]._80 && Number(FCRM) < variables[i]._100){
         fcrM=(20/(variables[i]._100-variables[i]._80))*FCRM;
         fcrM-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         fcrvM=variables[i].peso;

   }else if(Number(FCRM) >= variables[i]._100 && Number(FCRM) < variables[i]._120){
         fcrM=(20/(variables[i]._120-variables[i]._100))*FCRM;
         fcrM-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         fcrvM=variables[i].peso;

   }else if(Number(FCRM) >= variables[i]._120 && Number(FCRM) < variables[i]._150){
         fcrM=(30/(variables[i]._150-variables[i]._120))*FCRM;
         fcrM-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         fcrvM=variables[i].peso;

   }else if(Number(FCRM) >= variables[i]._150){
         fcrM=150;fcrvM=variables[i].peso;

   }else {fcrM=0;}

   if(Number(FCRJN) > variables[i]._0 && Number(FCRJN) < variables[i]._30)
   {
         fcrJN=(30/(variables[i]._30-variables[i]._0))*FCRJN;
         fcrJN-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         fcrvJN=variables[i].peso;

   }else if(Number(FCRJN) >= variables[i]._30 && Number(FCRJN) < variables[i]._50){
         fcrJN=(20/(variables[i]._50-variables[i]._30))*FCRJN;
         fcrJN-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         fcrvJN=variables[i].peso;
   }
   else if(Number(FCRJN) >= variables[i]._50 && Number(FCRJN) < variables[i]._60){
         fcrJN=(10/(variables[i]._60-variables[i]._50))*FCRJN;
         fcrJN-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         fcrvJN=variables[i].peso;
   }else if(Number(FCRJN) >= variables[i]._60 && Number(FCRJN) < variables[i]._80){
         fcrJN=(20/(variables[i]._80-variables[i]._60))*FCRJN;
         fcrJN-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         fcrvJN=variables[i].peso;

   }else if(Number(FCRJN) >= variables[i]._80 && Number(FCRJN) < variables[i]._100){
         fcrJN=(20/(variables[i]._100-variables[i]._80))*FCRJN;
         fcrJN-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         fcrvJN=variables[i].peso;

   }else if(Number(FCRJN) >= variables[i]._100 && Number(FCRJN) < variables[i]._120){
         fcrJN=(20/(variables[i]._120-variables[i]._100))*FCRJN;
         fcrJN-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         fcrvJN=variables[i].peso;

   }else if(Number(FCRJN) >= variables[i]._120 && Number(FCRJN) < variables[i]._150){
         fcJNr=(30/(variables[i]._150-variables[i]._120))*FCRJN;
         fcrJN-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         fcrvJN=variables[i].peso;

   }else if(Number(FCRJN) >= variables[i]._150){
         fcrJN=150;fcrvJN=variables[i].peso;

   }else {fcrJN=0;}








    ///fcr
 if(Number(FCRI) > variables[i]._0 && Number(FCRI) < variables[i]._30)
   {
         fcrI=(30/(variables[i]._30-variables[i]._0))*FCRI;
         fcrI-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         fcrIv=variables[i].peso;

   }else if(Number(FCRI) >= variables[i]._30 && Number(FCRI) < variables[i]._50){
         fcrI=(20/(variables[i]._50-variables[i]._30))*FCRI;
         fcrI-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         fcrIv=variables[i].peso;
   }
   else if(Number(FCRI) >= variables[i]._50 && Number(FCRI) < variables[i]._60){
         fcrI=(10/(variables[i]._60-variables[i]._50))*FCRI;
         fcrI-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         fcrIv=variables[i].peso;
   }else if(Number(FCRI) >= variables[i]._60 && Number(FCRI) < variables[i]._80){
         fcrI=(20/(variables[i]._80-variables[i]._60))*FCRI;
         fcrI-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         fcrIv=variables[i].peso;

   }else if(Number(FCRI) >= variables[i]._80 && Number(FCRI) < variables[i]._100){
         fcrI=(20/(variables[i]._100-variables[i]._80))*FCRI;
         fcrI-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         fcrIv=variables[i].peso;

   }else if(Number(FCRI) >= variables[i]._100 && Number(FCRI) < variables[i]._120){
         fcrI=(20/(variables[i]._120-variables[i]._100))*FCRI;
         fcrI-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         fcrIv=variables[i].peso;

   }else if(Number(FCRI) >= variables[i]._120 && Number(FCRI) < variables[i]._150){
         fcrI=(30/(variables[i]._150-variables[i]._120))*FCRI;
         fcrI-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         fcrIv=variables[i].peso;

   }else if(Number(FCRI) >= variables[i]._150){
         fcrI=150;fcrIv=variables[i].peso;
         

   }else {fcrI=0;}
   
      break;
      case 6:
      ///av
 
if(Number(AV) < variables[i]._0 && Number(AV) > variables[i]._30)
   {
         av=(30/(variables[i]._30-variables[i]._0))*AV;
         av-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         avv=variables[i].peso;

   }else if(Number(AV) <= variables[i]._30 && Number(AV) > variables[i]._50){
         av=(20/(variables[i]._50-variables[i]._30))*AV;
         av-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         avv=variables[i].peso;

   }
   else if(Number(AV) <= variables[i]._50 && Number(AV) > variables[i]._60){
         av=(10/(variables[i]._60-variables[i]._50))*AV;
         av-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         avv=variables[i].peso;

   }else if(Number(AV) <= variables[i]._60 && Number(AV) > variables[i]._80){
         av=(20/(variables[i]._80-variables[i]._60))*AV;
         av-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         avv=variables[i].peso;
      

   }else if(Number(AV) <= variables[i]._80 && Number(AV) > variables[i]._100){
         av=(20/(variables[i]._100-variables[i]._80))*AV;
         av-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         avv=variables[i].peso;

   }else if(Number(AV) <= variables[i]._100 && Number(AV) > variables[i]._120){
         av=(20/(variables[i]._120-variables[i]._100))*AV;
         av-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         avv=variables[i].peso;

   }else if(Number(AV) <= variables[i]._120 && Number(AV) > variables[i]._150){
         av=(30/(variables[i]._150-variables[i]._120))*AV;
         av-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         avv=variables[i].peso;

   }else if(Number(AV) <= variables[i]._150){
         av=150;avv=variables[i].peso;
         
   }else {av=0;}



if(Number(AVM) < variables[i]._0 && Number(AVM) > variables[i]._30)
   {
         avM=(30/(variables[i]._30-variables[i]._0))*AVM;
         avM-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         avvM=variables[i].peso;

   }else if(Number(AVM) <= variables[i]._30 && Number(AVM) > variables[i]._50){
         avM=(20/(variables[i]._50-variables[i]._30))*AVM;
         avM-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         avvM=variables[i].peso;

   }
   else if(Number(AVM) <= variables[i]._50 && Number(AVM) > variables[i]._60){
         avM=(10/(variables[i]._60-variables[i]._50))*AVM;
         avM-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         avvM=variables[i].peso;

   }else if(Number(AVM) <= variables[i]._60 && Number(AVM) > variables[i]._80){
         avM=(20/(variables[i]._80-variables[i]._60))*AVM;
         avM-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         avvM=variables[i].peso;
      

   }else if(Number(AVM) <= variables[i]._80 && Number(AVM) > variables[i]._100){
         avM=(20/(variables[i]._100-variables[i]._80))*AVM;
         avM-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         avvM=variables[i].peso;

   }else if(Number(AVM) <= variables[i]._100 && Number(AVM) > variables[i]._120){
         avM=(20/(variables[i]._120-variables[i]._100))*AVM;
         avM-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         avvM=variables[i].peso;

   }else if(Number(AVM) <= variables[i]._120 && Number(AVM) > variables[i]._150){
         avM=(30/(variables[i]._150-variables[i]._120))*AVM;
         avM-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         avvM=variables[i].peso;

   }else if(Number(AVM) <= variables[i]._150){
         avM=150;avvM=variables[i].peso;
         
   }else {avM=0;}

   if(Number(AVJN) < variables[i]._0 && Number(AVJN) > variables[i]._30)
   {
         avJN=(30/(variables[i]._30-variables[i]._0))*AVJN;
         avJN-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         avvJN=variables[i].peso;

   }else if(Number(AVJN) <= variables[i]._30 && Number(AVJN) > variables[i]._50){
         avJN=(20/(variables[i]._50-variables[i]._30))*AVJN;
         avJN-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         avvJN=variables[i].peso;

   }
   else if(Number(AVJN) <= variables[i]._50 && Number(AVJN) > variables[i]._60){
         avJN=(10/(variables[i]._60-variables[i]._50))*AVJN;
         avJN-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         avvJN=variables[i].peso;

   }else if(Number(AVJN) <= variables[i]._60 && Number(AVJN) > variables[i]._80){
         avJN=(20/(variables[i]._80-variables[i]._60))*AVJN;
         avJN-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         avvJN=variables[i].peso;
      

   }else if(Number(AVJN) <= variables[i]._80 && Number(AVJN) > variables[i]._100){
         avJN=(20/(variables[i]._100-variables[i]._80))*AVJN;
         avJN-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         avvJN=variables[i].peso;

   }else if(Number(AVJN) <= variables[i]._100 && Number(AVJN) > variables[i]._120){
         avJN=(20/(variables[i]._120-variables[i]._100))*AVJN;
         avJN-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         avvJN=variables[i].peso;

   }else if(Number(AVJN) <= variables[i]._120 && Number(AVJN) > variables[i]._150){
         avJN=(30/(variables[i]._150-variables[i]._120))*AVJN;
         avJN-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         avvJN=variables[i].peso;

   }else if(Number(AVJN) <= variables[i]._150){
         avJN=150;avvJN=variables[i].peso;
         
   }else {avJN=0;}








   ///av
 
if(Number(AVI) < variables[i]._0 && Number(AVI) > variables[i]._30)
   {
         avI=(30/(variables[i]._30-variables[i]._0))*AVI;
         avI-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         avIv=variables[i].peso;

   }else if(Number(AVI) <= variables[i]._30 && Number(AVI) > variables[i]._50){
         avI=(20/(variables[i]._50-variables[i]._30))*AVI;
         avI-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         avIv=variables[i].peso;

   }
   else if(Number(AVI) <= variables[i]._50 && Number(AVI) > variables[i]._60){
         avI=(10/(variables[i]._60-variables[i]._50))*AVI;
         avI-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         avIv=variables[i].peso;

   }else if(Number(AVI) <= variables[i]._60 && Number(AVI) > variables[i]._80){
         avI=(20/(variables[i]._80-variables[i]._60))*AVI;
         avI-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         avIv=variables[i].peso;
      

   }else if(Number(AVI) <= variables[i]._80 && Number(AVI) > variables[i]._100){
         avI=(20/(variables[i]._100-variables[i]._80))*AVI;
         avI-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         avIv=variables[i].peso;

   }else if(Number(AVI) <= variables[i]._100 && Number(AVI) > variables[i]._120){
         avI=(20/(variables[i]._120-variables[i]._100))*AVI;
         avI-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         avIv=variables[i].peso;

   }else if(Number(AVI) <= variables[i]._120 && Number(AVI) > variables[i]._150){
         avI=(30/(variables[i]._150-variables[i]._120))*AVI;
         avI-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         avIv=variables[i].peso;

   }else if(Number(AVI) <= variables[i]._150){
         avI=150;avIv=variables[i].peso;
         
   }else {avI=0;}

      break;
      case 7:
      if(Number(calidadNt) > variables[i]._0 && Number(calidadNt) < variables[i]._30)
   {
         caNt=(30/(variables[i]._30-variables[i]._0))*calidadNt;
         caNt-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         savNt=variables[i].peso;
         
   }else if(Number(calidadNt) >= variables[i]._30 && Number(calidadNt) < variables[i]._50){
         caNt=(20/(variables[i]._50-variables[i]._30))*calidadNt;
         caNt-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         savNt=variables[i].peso;
         
   }
   else if(Number(calidadNt) >= variables[i]._50 && Number(calidadNt) < variables[i]._60){
         caNt=(10/(variables[i]._60-variables[i]._50))*calidadNt;
         caNt-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         savNt=variables[i].peso;
         
   }else if(Number(calidadNt) >= variables[i]._60 && Number(calidadNt) < variables[i]._80){
         caNt=(20/(variables[i]._80-variables[i]._60))*calidadNt;
         caNt-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         savNt=variables[i].peso;
         
   }else if(Number(calidadNt) >= variables[i]._80 && Number(calidadNt) < variables[i]._100){
         caNt=(20/(variables[i]._100-variables[i]._80))*calidadNt;
         caNt-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         savNt=variables[i].peso;
         
   }else if(Number(calidadNt) >= variables[i]._100 && Number(calidadNt) < variables[i]._120){
         caNt=(20/(variables[i]._120-variables[i]._100))*calidadNt;
         caNt-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         savNt=variables[i].peso;
         
   }else if(Number(calidadNt) >= variables[i]._120 && Number(calidadNt) < variables[i]._150){
         caNt=(30/(variables[i]._150-variables[i]._120))*calidadNt;
         caNt-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         savNt=variables[i].peso;
        
   }else if(Number(calidadNt) >= variables[i]._150){
         caNt=150;
         savNt=variables[i].peso;
         
   }else {caNt=0;}

      break;
      case 8:
      if(Number(insatisfechosNt) < variables[1]._0 && Number(insatisfechosNt) > variables[1]._30)
   {
         insaNt=(30/(variables[i]._30-variables[i]._0))*insatisfechosNt;
         insaNt-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         insavNt=variables[i].peso;

   }else if(Number(insatisfechosNt) <= variables[i]._30 && Number(insatisfechosNt) > variables[i]._50){
         insaNt=(20/(variables[i]._50-variables[i]._30))*insatisfechosNt;
         insaNt-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         insavNt=variables[i].peso;

   }
   else if(Number(insatisfechosNt) <= variables[i]._50 && Number(insatisfechosNt) > variables[i]._60){
         insaNt=(10/(variables[i]._60-variables[i]._50))*insatisfechosNt;
         insaNt-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         insavNt=variables[i].peso;

   }else if(Number(insatisfechosNt) <= variables[i]._60 && Number(insatisfechosNt) > variables[i]._80){
         insaNt=(20/(variables[i]._80-variables[i]._60))*insatisfechosNt;
         insaNt-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         insavNt=variables[i].peso;
      

   }else if(Number(insatisfechosNt) <= variables[i]._80 && Number(insatisfechosNt) > variables[i]._100){
         insaNt=(20/(variables[i]._100-variables[i]._80))*insatisfechosNt;
         insaNt-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         insavNt=variables[i].peso;

   }else if(Number(insatisfechosNt) <= variables[i]._100 && Number(insatisfechosNt) > variables[i]._120){
         insaNt=(20/(variables[i]._120-variables[i]._100))*insatisfechosNt;
         insaNt-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         insavNt=variables[i].peso;

   }else if(Number(insatisfechosNt) <= variables[i]._120 && Number(insatisfechosNt) > variables[i]._150){
         insaNt=(30/(variables[i]._150-variables[i]._120))*insatisfechosNt;
         insaNt-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         insavNt=variables[i].peso;

   }else if(Number(insatisfechosNt) <= variables[i]._150){
         insaNt=150;insavNt=variables[i].peso;
         
   }else {insaNt=0;}

      break;
      case 9:
      if(Number(NDANt) > variables[i]._0 && Number(NDANt) < variables[i]._30)
   {
         ndaNt=(30/(variables[i]._30-variables[i]._0))*NDANt;
         ndaNt-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndavNt=variables[i].peso;

   }else if(Number(NDANt) >= variables[i]._30 && Number(NDANt) < variables[i]._50){
         ndaNt=(10/(variables[i]._50-variables[i]._30))*NDANt;
         ndaNt-=(10/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndavNt=variables[i].peso;
   }
   else if(Number(NDANt) >= variables[i]._50 && Number(NDANt) < variables[i]._60){
         ndaNt=(10/(variables[i]._60-variables[i]._50))*NDANt;
         ndaNt-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndavNt=variables[i].peso;
   }else if(Number(NDANt) >= variables[i]._60 && Number(NDANt) < variables[i]._80){
         ndaNt=(20/(variables[i]._80-variables[i]._60))*NDANt;
         ndaNt-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndavNt=variables[i].peso;

   }else if(Number(NDANt) >= variables[i]._80 && Number(NDANt) < variables[i]._100){
         ndaNt=(20/(variables[i]._100-variables[i]._80))*NDANt;
         ndaNt-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndavNt=variables[i].peso;

   }else if(Number(NDANt) >= variables[i]._100 && Number(NDANt) < variables[i]._120){
         ndaNt=(20/(variables[i]._120-variables[i]._100))*NDANt;
         ndaNt-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndavNt=variables[i].peso;

   }else if(Number(NDANt) >= variables[i]._120 && Number(NDANt) < variables[i]._150){
         ndaNt=(30/(variables[i]._150-variables[i]._120))*NDANt;
         ndaNt-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndavNt=variables[i].peso;

   }else if(Number(NDANt) >= variables[i]._150){
         ndaNt=150;ndavNt=variables[i].peso;
         

   }else {ndaNt=0;}

      break;
      case 10:
      if(Number(NDSNt) > variables[i]._0 && Number(NDSNt) < variables[i]._30)
   {
         ndsNt=(30/(variables[i]._30-variables[i]._0))*NDSNt;
         ndsNt-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         ndsvNt=variables[i].peso;

   }else if(Number(NDSNt) >= variables[i]._30 && Number(NDSNt) < variables[i]._50){
         ndsNt=(20/(variables[i]._50-variables[i]._30))*NDSNt;
         ndsNt-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         ndsvNt=variables[i].peso;
   }
   else if(Number(NDSNt) >= variables[i]._50 && Number(NDSNt) < variables[i]._60){
         ndsNt=(10/(variables[i]._60-variables[i]._50))*NDSNt;
         ndsNt-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         ndsvNt=variables[i].peso;
   }else if(Number(NDSNt) >= variables[i]._60 && Number(NDSNt) < variables[i]._80){
         ndsNt=(20/(variables[i]._80-variables[i]._60))*NDSNt;
         ndsNt-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         ndsvNt=variables[i].peso;

   }else if(Number(NDSNt) >= variables[i]._80 && Number(NDSNt) < variables[i]._100){
         ndsNt=(20/(variables[i]._100-variables[i]._80))*NDSNt;
         ndsNt-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         ndsvNt=variables[i].peso;

   }else if(Number(NDSNt) >= variables[i]._100 && Number(NDSNt) < variables[i]._120){
         ndsNt=(20/(variables[i]._120-variables[i]._100))*NDSNt;
         ndsNt-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         ndsvNt=variables[i].peso;

   }else if(Number(NDSNt) >= variables[i]._120 && Number(NDSNt) < variables[i]._150){
         ndsNt=(30/(variables[i]._150-variables[i]._120))*NDSNt;
         ndsNt-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         ndsvNt=variables[i].peso;

   }else if(Number(NDSNt) >= variables[i]._150){
         ndsNt=150;
         ndsvNt=variables[i].peso;

   }else {ndsNt=0;}

      break;
      case 11:
      if(Number(FCRNt) > variables[i]._0 && Number(FCRNt) < variables[i]._30)
   {
         fcrNt=(30/(variables[i]._30-variables[i]._0))*FCRNt;
         fcrNt-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         fcrvNt=variables[i].peso;

   }else if(Number(FCRNt) >= variables[i]._30 && Number(FCRNt) < variables[i]._50){
         fcrNt=(20/(variables[i]._50-variables[i]._30))*FCRNt;
         fcrNt-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         fcrvNt=variables[i].peso;
   }
   else if(Number(FCRNt) >= variables[i]._50 && Number(FCRNt) < variables[i]._60){
         fcrNt=(10/(variables[i]._60-variables[i]._50))*FCRNt;
         fcrNt-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         fcrvNt=variables[i].peso;
   }else if(Number(FCRNt) >= variables[i]._60 && Number(FCRNt) < variables[i]._80){
         fcrNt=(20/(variables[i]._80-variables[i]._60))*FCRNt;
         fcrNt-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         fcrvNt=variables[i].peso;

   }else if(Number(FCRNt) >= variables[i]._80 && Number(FCRNt) < variables[i]._100){
         fcrNt=(20/(variables[i]._100-variables[i]._80))*FCRNt;
         fcrNt-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         fcrvNt=variables[i].peso;

   }else if(Number(FCRNt) >= variables[i]._100 && Number(FCRNt) < variables[i]._120){
         fcrNt=(20/(variables[i]._120-variables[i]._100))*FCRNt;
         fcrNt-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         fcrvNt=variables[i].peso;
         console.log("***********c1***********");

   }else if(Number(FCRNt) >= variables[i]._120 && Number(FCRNt) < variables[i]._150){
         fcrNt=(30/(variables[i]._150-variables[i]._120))*FCRNt;
         fcrNt-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         fcrvNt=variables[i].peso;

   }else if(Number(FCRNt) >= variables[i]._150){
         fcrNt=150;fcrvNt=variables[i].peso;

   }else {fcrNt=0;}

      break;
      case 12:
      if(Number(AVNt) < variables[i]._0 && Number(AVNt) > variables[i]._30)
   {
         avNt=(30/(variables[i]._30-variables[i]._0))*AVNt;
         avNt-=(30/(variables[i]._30-variables[i]._0)*variables[i]._0);
         avvNt=variables[i].peso;

   }else if(Number(AVNt) <= variables[i]._30 && Number(AVNt) > variables[i]._50){
         avNt=(20/(variables[i]._50-variables[i]._30))*AVNt;
         avNt-=(20/(variables[i]._50-variables[i]._30)*variables[i]._30)-30;
         avvNt=variables[i].peso;

   }
   else if(Number(AVNt) <= variables[i]._50 && Number(AVNt) > variables[i]._60){
         avNt=(10/(variables[i]._60-variables[i]._50))*AVNt;
         avNt-=(10/(variables[i]._60-variables[i]._50)*variables[i]._50)-50;
         avvNt=variables[i].peso;

   }else if(Number(AVNt) <= variables[i]._60 && Number(AVNt) > variables[i]._80){
         avNt=(20/(variables[i]._80-variables[i]._60))*AVNt;
         avNt-=(20/(variables[i]._80-variables[i]._60)*variables[i]._60)-60;
         avvNt=variables[i].peso;
      

   }else if(Number(AVNt) <= variables[i]._80 && Number(AVNt) > variables[i]._100){
         avNt=(20/(variables[i]._100-variables[i]._80))*AVNt;
         avNt-=(20/(variables[i]._100-variables[i]._80)*variables[i]._80)-80;
         avvNt=variables[i].peso;

   }else if(Number(AVNt) <= variables[i]._100 && Number(AVNt) > variables[i]._120){
         avNt=(20/(variables[i]._120-variables[i]._100))*AVNt;
         avNt-=(20/(variables[i]._120-variables[i]._100)*variables[i]._100)-100;
         avvNt=variables[i].peso;

   }else if(Number(AVNt) <= variables[i]._120 && Number(AVNt) > variables[i]._150){
         avNt=(30/(variables[i]._150-variables[i]._120))*AVNt;
         avNt-=(30/(variables[i]._150-variables[i]._120)*variables[i]._120)-120;
         avvNt=variables[i].peso;

   }else if(Number(AVNt) <= variables[i]._150){
         avNt=150;avv=variables[i].peso;
         
   }else {avNt=0;}

      break;
       default:
           console.log("no relevante");
          
   }
}
 
 sa=((ca*sav)+(insa*insav))/100;
 cacc=((nda*ndav)+(nds*ndsv))/100;
 cages=((fcr*fcrv)+(av*avv))/100;
 var suma=sa+cacc+cages;
 var rv=0;
 saM=((caM*savM)+(insaM*insavM))/100;
 caccM=((ndaM*ndavM)+(ndsM*ndsvM))/100;
 cagesM=((fcrM*fcrvM)+(avM*avvM))/100;
 var sumaM=saM+caccM+cagesM;
 var rvM=0;
 saJN=((caJN*savJN)+(insaJN*insavJN))/100;
 caccJN=((ndaJN*ndavJN)+(ndsJN*ndsvJN))/100;
 cagesJN=((fcrJN*fcrvJN)+(avJN*avvJN))/100;
 var sumaJN=saJN+caccJN+cagesJN;
 var rvJN=0;

if (suma >= 101){
   rv=suma/10;
}else if (suma > 80 && suma <= 100){
   rv=(3*suma/20)-5;
}else if (suma > 60 && suma <= 80){
   rv=(7*suma/20)-21;
}else if (suma > 49 && suma <= 60){
   rv=0;
}else if (suma > 30 && suma <= 49){
   rv=(0.5*suma)-25;
}else if (suma <= 30){
   rv=-10;
}

if (sumaM >= 101){
   rvM=sumaM/10;
}else if (sumaM > 80 && sumaM <= 100){
   rvM=(3*sumaM/20)-5;
}else if (sumaM > 60 && sumaM <= 80){
   rvM=(7*sumaM/20)-21;
}else if (sumaM > 49 && sumaM <= 60){
   rvM=0;
}else if (sumaM > 30 && sumaM <= 49){
   rvM=(0.5*sumaM)-25;
}else if (sumaM <= 30){
   rvM=-10;
}

if (sumaJN >= 101){
   rvJN=sumaJN/10;
}else if (sumaJN > 80 && sumaJN <= 100){
   rvJN=(3*sumaJN/20)-5;
}else if (sumaJN > 60 && sumaJN <= 80){
   rvJN=(7*sumaJN/20)-21;
}else if (sumaJN > 49 && sumaJN <= 60){
   rvJN=0;
}else if (sumaJN > 30 && sumaJN <= 49){
   rvJN=(0.5*sumaJN)-25;
}else if (sumaJN <= 30){
   rvJN=-10;
}

var rvMes=0,rvMesM=0,rvMesJN=0;
rvMes=(rv*abrilA)/100;
rvMesM=(rvM*mayoA)/100;
rvMesJN=(rvJN*junioA)/100;

saI=((caI*caIv)+(insaI*insaIv))/100;
caccI=((ndaI*ndaIv)+(ndsI*ndsIv))/100;
cagesI=((fcrI*fcrIv)+(avI*avIv))/100;
sumaI=saI+caccI+cagesI;
var rvI=0;
if (sumaI >= 101){
   rvI=sumaI/10;
}else if (sumaI > 80 && sumaI <= 100){
   rvI=(3*sumaI/20)-5;
}else if (sumaI > 60 && sumaI <= 80){
   rvI=(7*sumaI/20)-21;
}else if (sumaI > 49 && sumaI <= 60){
   rvI=0;
}else if (sumaI > 30 && sumaI <= 49){
   rvI=(0.5*sumaI)-25;
}else if (sumaI <= 30){
   rvI=-10;
}

var rvMesI=0;
rvMesI=(rvI*junioI)/100;

saNt=((caNt*savNt)+(insaNt*insavNt))/100;
caccNt=((ndaNt*ndavNt)+(ndsNt*ndsvNt))/100;
cagesNt=((fcrNt*fcrvNt)+(avNt*avvNt))/100;
var sumaNt=saNt+caccNt+cagesNt;
var rvNt=0;

if (sumaNt >= 101){
   rvNt=sumaNt/10;
}else if (sumaNt > 80 && sumaNt <= 100){
   rvNt=(3*sumaNt/20)-5;
}else if (sumaNt > 60 && sumaNt <= 80){
   rvNt=(7*sumaNt/20)-21;
}else if (sumaNt > 49 && sumaNt <= 60){
   rvNt=0;
}else if (sumaNt > 30 && sumaNt <= 49){
   rvNt=(0.5*sumaNt)-25;
}else if (sumaNt <= 30){
   rvNt=-10;
}

var rvMesNt=0;
rvMesNt=(rvNt*junioNtA)/100;

 %>

<div class="container">
 <table class="responsive-table">
    <caption>Top 3 Resultado Variable ATENTO </caption>
    <thead>
      <tr>
        <th colspan=1>Indicador</th>
        <th colspan=1>Abril</th>
        <th colspan=1">Mayo</th>
        <th colspan=1">Junio</th>
         </tr>
    </thead>
    <tfoot>
      <tr>
        <td colspan="7">Datos con tablas nuevas</td>
      </tr>
    </tfoot>
    <tbody>
    <tr>
    <td> Indicador calidad</td>
    <td> <%=  ca.toFixed(2)%></td><td> <%=  caM.toFixed(2)%></td>
    <td> <%=  caJN.toFixed(2)%></td></tr>
    <td>Indicador insatisfechos</td>
    <td> <%= insa.toFixed(2)%></td><td> <%= insaM.toFixed(2)%></td>
    <td> <%= insaJN.toFixed(2)%></td></tr>
    <td>Indicador NDA </td>
    <td> <%= nda.toFixed(2)%></td><td> <%= ndaM.toFixed(2)%></td>
    <td> <%= ndaJN.toFixed(2)%></td></tr>
    <td>Indicador NDS </td>
    <td> <%= nds.toFixed(2)%></td><td> <%= ndsM.toFixed(2)%></td>
    <td> <%= ndsJN.toFixed(2)%></td></tr>
    <td>Indicador FCR </td>
    <td> <%= fcr.toFixed(2)%></td><td> <%= fcrM.toFixed(2)%></td>
    <td> <%= fcrJN.toFixed(2)%></td></tr>
    <td>Indicador AV/Boletintes </td>
    <td> <%= av.toFixed(2)%></td><td> <%= avM.toFixed(2)%></td>
    <td> <%= avJN.toFixed(2)%></td></tr>
    <td>SATISFACCION CLIENTE </td>
    <td> <%= sa.toFixed(2)%></td><td> <%= saM.toFixed(2)%></td>
    <td> <%= saJN.toFixed(2)%></td></tr>
    <td>CALIDAD ACCESO </td>
    <td> <%= cacc.toFixed(2)%></td><td> <%= caccM.toFixed(2)%></td>
    <td> <%= caccJN.toFixed(2)%></td></tr>
    <td>CALIDAD GESTION </td>
    <td> <%= cages.toFixed(2)%></td><td> <%= cagesM.toFixed(2)%></td>
    <td> <%= cagesJN.toFixed(2)%></td></tr>
    <td>Resultado Porc. Variable </td>
    <td> <%= suma.toFixed(2) %></td><td> <%= sumaM.toFixed(2) %></td>
    <td> <%= sumaJN.toFixed(2) %></td></tr>
    <td>% Retribución  Variable </td>
    <td> <%= rv.toFixed(2) %></td><td> <%= rvM.toFixed(2) %></td>
    <td> <%= rvJN.toFixed(2) %></td></tr>
    <td>Retribución  Variable  MES </td>
    <td> <%= rvMes.toFixed(2) %></td><td> <%= rvMesM.toFixed(2) %></td>
    <td> <%= rvMesJN.toFixed(2) %></td></tr>
   
    


</tbody>    
 </table>
</div>


<p>
	<a href="/variables">Volver</a>
</p>